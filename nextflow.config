/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    rnaseq Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

nextflow.enable.dsl = 2

process {
    //LSF (Platform Load Sharing Facility) 
    executor = 'lsf'
    queue    = 'gpu'
    memory   = '24G'
    cpus     = '4'

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'

    withLabel:process_single  {
        queue    = 'short'
        memory   = '16G'
        cpus     = '1'
    }

    withLabel:process_low  {
        queue    = 'short'
        memory   = '16G'
        cpus     = '2'
    }

    withLabel:process_medium  {
        queue    = 'short'
        memory   = '24G'
        cpus     = '4'
    }

    withLabel:process_high  {
        queue    = 'long'
            memory   = '72G'
        cpus     = '8'
    }

    withLabel:error_retry  {
        errorStrategy = 'retry'
        maxRetries   = 2
    }
}

// Capture exit codes from upstream processes when piping
//process.shell = ['/bin/bash', '-euo', 'pipefail']

docker.runOptions = '-u $(id -u):$(id -g)'
singularity.enabled = true

// Defaults values for params
params.fastq_single = null
params.fastq_paired = null


// Load modules.config for DSL2 module specific options
//includeConfig 'conf/modules.config'

params {
    // Base Configuration
    data_dir    = "${launchDir}/data"
    results_dir = "${launchDir}/results"

    run_get_wormbase_data      = false
    run_create_star_rsem_index = false
    run_create_salmon_index    = false
    run_get_dropbox_data       = false
    run_cut_and_tag            = false
    run_fastqc                 = false
    run_find_lib_type          = false
    run_trim_galore            = false
    run_trimmomatic            = false
    run_rnaseq_rsem            = false
    run_rnaseq_salmon          = false
    run_deseq_rsem             = false
    run_deseq_rsem_report      = false
    run_wormcat                = false
    run_stage_results          = false

    // Reference options
    wormbase_version           = "WS289"
    annotation_file            = "${launchDir}/data/wormbase/c_elegans.PRJNA13758.${params.wormbase_version}.canonical_geneset.gtf"
    genome_file                = "${launchDir}/data/wormbase/c_elegans.PRJNA13758.${params.wormbase_version}.genomic.fa"

    // Trimmomatic 
    //trimmomatic_control      = '"SLIDINGWINDOW:4:15 MINLEN:75"'
    trimmomatic_control        = '"HEADCROP:10 MINLEN:75"'

    // RNA Seq Quantification rsem  
    star_index_dir             = "${results_dir}/star_index"
    rsem_reference_dir         = "${results_dir}/rsem_index"

    // RNA Seq Quantification salmon
    salmon_index_dir           = "${results_dir}/salmon_index"
    tx2gene                    = "${results_dir}/salmon_transcripts/tx2gene.tsv"
    counts_method              = "lengthScaledTPM"

    // DESeq2
    rsem_counts                = "${results_dir}/rsem_summary/genes_expression_expected_count.tsv"
    deseq_meta                 = "${launchDir}/conf/deseq_meta/*.csv"
    low_count_max              = 10

    // Wormcat
    deseq_up_down_dir          = "${results_dir}/deseq_**/ud_**"

    // Overview Report
    params.report_config       = "${launchDir}/conf/experiment.json"

    // Alignment
    aligner                    = "bowtie2"
    save_unaligned             = false
    only_alignment             = false
    end_to_end                 = true

    
    // genome rsem_index
    igenomes_base              = "s3://ngi-igenomes/igenomes/"
}

// aws s3 ls  --recursive  --no-sign-request s3://ngi-igenomes/igenomes/Caenorhabditis_elegans/
params {
    genomes {
        'WBcel235' {
                fasta       = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/WholeGenomeFasta/genome.fa"
                bwa         = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/BWAIndex/version0.6.0/"
                bowtie2     = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/Bowtie2Index/"
                star        = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/STARIndex/"
                bismark     = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Sequence/BismarkIndex/"
                gtf         = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Annotation/Genes/genes.gtf"
                bed12       = "${params.igenomes_base}/Caenorhabditis_elegans/Ensembl/WBcel235/Annotation/Genes/genes.bed"
                mito_name   = "MtDNA"
                macs_gsize  = "9e7"
        }
        'ce10' {
                fasta       = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/WholeGenomeFasta/genome.fa"
                bwa         = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/BWAIndex/version0.6.0/"
                bowtie2     = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/Bowtie2Index/"
                star        = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/STARIndex/"
                bismark     = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Sequence/BismarkIndex/"
                gtf         = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Annotation/Genes/genes.gtf"
                bed12       = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Annotation/Genes/genes.bed"
                readme      = "${params.igenomes_base}/Caenorhabditis_elegans/UCSC/ce10/Annotation/README.txt"
                mito_name   = "chrM"
                macs_gsize  = "9e7"
        }
    }
}

dag.enabled = false
dag.file = 'dag.png'
dag.verbodes = true